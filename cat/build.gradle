plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Apply the Java plugin to add support GraalVM native image building.
    id 'org.graalvm.buildtools.native'

    // Plugins to ensure code quality
    id 'checkstyle'
    id 'pmd'
    id "com.github.spotbugs"
}

/////////////////////////// VARIABLES /////////////////////////////////////////
def mainClassPath = 'unix.commands.graalvm.cat.Cat'
def javaVersion = project.findProperty('projectJavaVersion') as Integer
def pmdThreadsQty = project.findProperty('pmdThreadsQty') as Integer
///////////////////////////////////////////////////////////////////////////////

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(testingLibs.junit.jupiter)
    testRuntimeOnly(testingLibs.junit.engine)
}

application {
    // Define the main class for the application.
    mainClass = mainClassPath
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

graalvmNative {
    binaries {
        main {
            imageName = "cat"
            mainClass = mainClassPath
            buildArgs.add("-O2")
            javaLauncher = javaToolchains.launcherFor {
                languageVersion = JavaLanguageVersion.of(javaVersion)
                vendor = JvmVendorSpec.matching("Oracle Corporation")
            }
        }
        test {
            buildArgs.add("-O0")
            javaLauncher = javaToolchains.launcherFor {
                languageVersion = JavaLanguageVersion.of(javaVersion)
                vendor = JvmVendorSpec.matching("Oracle Corporation")
            }
        }
    }
    binaries.configureEach {
        buildArgs.add("--verbose")
    }
}

checkstyle {
    toolVersion = qualityLibs.versions.checkstyle.get()
}

pmd {
    consoleOutput = false
    toolVersion = qualityLibs.versions.pmd.get()
    ignoreFailures = true
    ruleSets = ["category/java/errorprone.xml",
                "category/java/bestpractices.xml",
                "category/java/performance.xml",
                "category/java/security.xml"]
    threads = pmdThreadsQty
}
